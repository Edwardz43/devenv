version: '3'
services:
    postgres:
        container_name: mypostgres
        image: postgres
        restart: always
        environment:
            - 'POSTGRES_DB=${POSTGRES_DB}'
            - 'POSTGRES_USER=${POSTGRES_USER}'
            - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
        ports:
            - '${POSTGRES_PORT}:5432'
        volumes:
            - '${POSTGRES_VOLUME}:/var/lib/postgresql/data'
        networks:
            - backend
    
    pgadmin:
        container_name: mypgadmin
        image: dpage/pgadmin4
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        volumes:      
            - ${PGADMIN_VOLUME}:/pgdata
        ports:
            - '${PGADMIN_PORT}:80'
        depends_on:
            - postgres
        networks:
            - backend

    redis:        
        container_name: myredis
        image: redis
        restart: always
        networks:
          - backend        
        volumes:
            - ${REDIS_VOLUME}:/data
        ports:
            - '${REDIS_PORT}:6379'
    
    mongo:
        container_name: mymongo
        image: mongo
        restart: always
        volumes:
            - "/data/mongo:/data/db"
            - "/data/mongo-entrypoint/:/docker-entrypoint-initdb.d/"
        ports:
            - ${MONGO_PORT}:27017
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}

    cadvisor:
        container_name: mycadvisor
        image: gcr.io/google-containers/cadvisor:latest
        restart: always
        volumes:
            - "/:/rootfs:ro"
            - "/var/run:/var/run:ro"
            - "/sys:/sys:ro"
            - "/var/lib/docker/:/var/lib/docker:ro"
            - "/dev/disk/:/dev/disk:ro"
        ports: 
            - 8088:8080

networks: 
    backend:
        driver: bridge

volumes:
    postgres:
    pgadmin:
    mongo: